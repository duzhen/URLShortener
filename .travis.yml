language: node_js
node_js: 
  - "stable"
cache:
  directories:
    - "node_modules"
# services:
#   - docker
#   - mongodb
#   - redis-server
env:
  - DOCKER_COMPOSE_VERSION=1.8.0

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version

  # Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
  - docker-compose -f travis-docker-compose.yml pull
  # - docker-compose build
  - docker-compose -f travis-docker-compose.yml run -d zookeeper
  - docker-compose -f travis-docker-compose.yml run -d kafka
  - docker-compose -f travis-docker-compose.yml run -d mongodb
  - docker-compose -f travis-docker-compose.yml run -d redis

  # You will want this for logging. If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - docker ps